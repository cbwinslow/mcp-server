version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - .:/usr/src/app:delegated
      - node_modules:/usr/src/app/node_modules:delegated
    user: "nodeuser:nodejs"
    ports:
      - "3005:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5434/mcp_server
      - PORT=3001
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5434
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcp_server
    depends_on:
      - db
    networks:
      - mcp_network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcp_server
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mcp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:2-alpine
    ports:
      - "8081:80"
      - "8443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - mcp_network
    depends_on:
      - app

networks:
  mcp_network:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  node_modules:

